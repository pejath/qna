- cache answer do
  li[id="answer-#{answer.id}"]
    - if policy(answer.question).edit? && answer.persisted? && !answer.best
      = link_to 'Best', mark_the_best_answer_path(answer), method: :post, remote: true
    - if answer.best
      'Best answer:
    = answer.body
    div
      - if answer.files.attached?
        - answer.files.each do |file|
          p.file-container id="file-id-#{file.id}"
            = link_to file.filename.to_s, url_for(file)
            - if policy(answer).destroy?
              = link_to 'delete file', purge_file_path(file), method: :delete, remote: true, class: 'delete-file-link'
      - answer.links.each do |link|
        p= link_to link.name, link.url
    .rating
      'Rating:
      = answer.rating
    - if policy(answer).vote?
      .vote-container *{class: [vote_display(answer)]}
        =link_to "↑", vote_answer_path(vote_action: 'upvote', id: answer.id), method: :post, remote: true
        br
        =link_to "↓", vote_answer_path(vote_action: 'downvote', id: answer.id), method: :post, remote: true
      .unvote-container *{class: [unvote_display(answer)]}
        =link_to "Unvote", vote_answer_path(vote_action: 'unvote', id: answer.id), method: :post, remote: true
    .comments
      b Comments:
      = render answer.comments

    .comments-form
      - if signed_in?
        = render 'comments/form', commentable: answer
  - if policy(answer).edit?
    p= link_to 'Edit', '#', class: 'edit-answer-link', data: { answer_id: answer.id }
    p= link_to 'Delete answer', answer_path(answer), method: :delete, remote: true

    = form_with model: answer, local: false, class: 'hidden', html: { id: "edit-answer-#{answer.id}" } do |f|
      = f.label :body, 'Your answer'
      = f.text_area :body
      p
      = f.label :files
      = f.file_field :files, multiple: true
      = f.submit 'Save'
